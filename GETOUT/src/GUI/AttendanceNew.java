//2020 Jan 21 Fred Chen, Ashwin Boni Bangari, Sam Rogers
/*
 * GUI page
 * Used to create new attendance record
 */
package GUI;

import getout.GETOUT;
import Backend.User;
import java.util.ArrayList;
import Backend.ParseJson;
import java.util.ArrayList;
import Database.UserAttendance;

/**
 * @authors Sam Rogers, Ashwin Boni Bangari
 */
public class AttendanceNew extends javax.swing.JFrame {

    /**
     * Creates new form AttendanceNew
     */
    Object[][] data;

    //Populate table with users in database(Json files)
    public AttendanceNew() {
        data = new Object[GETOUT.users.size()][3];
        for (int i = 0; i < GETOUT.users.size(); i++) {
            data[i][0] = GETOUT.users.get(i).getName();
            data[i][1] = false;
            data[i][2] = GETOUT.users.get(i).getEmail();
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        dateName = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        exDate = new javax.swing.JLabel();
        attendanceTitle = new javax.swing.JLabel();
        attendanceView = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        checkAll = new javax.swing.JCheckBox();
        exitButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("New Meeting"));

        dateName.setText("Date:");

        dateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFieldActionPerformed(evt);
            }
        });

        exDate.setText("(Ex. 15-02-20)");

        attendanceTitle.setText("In Attendance:");

        table.setModel(new javax.swing.table.DefaultTableModel(
            data,
            new String [] {
                "Name", "Present", "email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
            public boolean isCellEditable(int row, int col) {
                switch (col) {
                    case 0:
                    case 2:
                    return false;
                    default:
                    return true;
                }
            }
        }

    );
    table.getTableHeader().setReorderingAllowed(false);
    attendanceView.setViewportView(table);

    checkAll.setText("Check All");
    checkAll.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            checkAllActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap(24, Short.MAX_VALUE)
                    .addComponent(attendanceView, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(15, 15, 15))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(attendanceTitle)
                            .addGap(27, 27, 27)
                            .addComponent(checkAll))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dateName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(exDate)))
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap(26, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(dateName)
                .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(exDate)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(attendanceTitle)
                .addComponent(checkAll))
            .addGap(18, 18, 18)
            .addComponent(attendanceView, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(41, 41, 41))
    );

    exitButton.setText("Exit");
    exitButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitButtonActionPerformed(evt);
        }
    });

    saveButton.setText("Save");
    saveButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveButtonActionPerformed(evt);
        }
    });

    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(cancelButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(saveButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(exitButton)))
            .addContainerGap())
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, exitButton, saveButton});

    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(exitButton)
                .addComponent(saveButton)
                .addComponent(cancelButton))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuScreen().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        ArrayList<UserAttendance> userList = new ArrayList<>();
        UserAttendance user;

        //Takes list from table and checks if they were present or not
        for (int i = 0; i < data.length; i++) {
            user = new UserAttendance((String) table.getValueAt(i, 0), (boolean) table.getValueAt(i, 1), (String) table.getValueAt(i, 2));
            userList.add(user);
        }
        //Saves the list of users to a Json file
        //First check if there is a date in the dateField
        try {
            String date = dateField.getText();
            if (date == null || date.equals("")) {
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new ErrorPanel("No date entered").setVisible(true);
                    }
                });
                //Check if the date entered is valid
            } else {
                try {
                    int day, mon, yr, temp;
                    int[] datePos = new int[]{0, 1, 3, 4, 6, 7};
                    for (int i : datePos) {
                        temp = Integer.parseInt(Character.toString(date.charAt(i)));
                    }
                    day = Integer.parseInt(Character.toString(date.charAt(0))) * 10
                            + Integer.parseInt(Character.toString(date.charAt(1)));
                    mon = Integer.parseInt(Character.toString(date.charAt(3))) * 10
                            + Integer.parseInt(Character.toString(date.charAt(4)));
                    //Write to a Json file
                    if (day < 32 && day > 0 && mon < 13 && mon > 0) {
                        ParseJson.writeToFile(userList, "UserCred/Calendar/" + date + ".json");
                        java.awt.EventQueue.invokeLater(new Runnable() {
                            public void run() {
                                new MenuScreen().setVisible(true);
                            }
                        });
                        this.dispose();
                        java.awt.EventQueue.invokeLater(new Runnable() {
                            public void run() {
                                new ErrorPanel("Saved", true).setVisible(true);
                            }
                        });
                    } else {
                        java.awt.EventQueue.invokeLater(new Runnable() {
                            public void run() {
                                new ErrorPanel("Not a proper date").setVisible(true);
                            }
                        });
                    }

                } catch (Exception e) {
                    java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                            new ErrorPanel("Not a proper date").setVisible(true);
                        }
                    });
                }

            }
        } catch (Exception e) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new ErrorPanel("Error").setVisible(true);
                }
            });
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void checkAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAllActionPerformed
        for (int i = 0; i < data.length; i++) {
            table.setValueAt(true, i, 1);
        }
        checkAll.setSelected(false);   
    }//GEN-LAST:event_checkAllActionPerformed

    private void dateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttendanceNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttendanceNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttendanceNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttendanceNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttendanceNew().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel attendanceTitle;
    private javax.swing.JScrollPane attendanceView;
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox checkAll;
    private javax.swing.JTextField dateField;
    private javax.swing.JLabel dateName;
    private javax.swing.JLabel exDate;
    private javax.swing.JButton exitButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
