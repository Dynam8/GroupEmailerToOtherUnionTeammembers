//2020 Jan 21 Fred Chen, Ashwin Boni Bangari, Sam Rogers
/*
 * GUI page
 * Used to view attendance records
 * Cannot edit, sends emails to absent members
 */
package GUI;

import getout.GETOUT;
import Backend.ParseJson;
import Database.UserAttendance;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;

/**
 * @author Ashwin Boni Bangari, Sam Rogers
 */
public class AttendanceScreen extends javax.swing.JFrame {

    /**
     * Creates new form AttendanceScreen
     */
    String[] fileList, attList;
    Object[][] data;

    //Populate file list with attendance records in database(Json files)
    public AttendanceScreen() {
        try {
            fileList = (new File("UserCred/Calendar")).list();
            attList = fileList;
            for (int i = 0; i < fileList.length; i++) {
                attList[i] = (fileList[i].substring(0, fileList[i].lastIndexOf('.')));
            }
        } catch (Exception e) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new ErrorPanel("No attendance has been taken").setVisible(true);
                }
            });
        }

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        attendanceList = new javax.swing.JScrollPane();
        Sheets = new javax.swing.JList<>();
        attenedanceText = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        menuButton = new javax.swing.JButton();
        attendanceViewer = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        eMailButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Attendance"));

        Sheets.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = attList;
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        attendanceList.setViewportView(Sheets);

        attenedanceText.setText("View attendance for:");

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        menuButton.setText("Menu");
        menuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            data,
            new String [] {
                "Name", "Present", "email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
            public boolean isCellEditable(int row, int col) {
                switch (col) {
                    case 0:
                    case 1:
                    return false;
                    default:
                    return true;
                }
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setEnabled(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        attendanceViewer.setViewportView(jTable1);

        eMailButton.setText("Contact Missing");
        eMailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eMailButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(menuButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eMailButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(attenedanceText, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(attendanceList, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(attendanceViewer, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {menuButton, updateButton});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(attenedanceText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(attendanceList, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(attendanceViewer, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(menuButton)
                    .addComponent(eMailButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        //Populate table with attendance records from
        //a single file in database(Json files)
        try {
            ArrayList<UserAttendance> list = ParseJson.readFromFile("UserCred/Calendar/"
                    + fileList[Sheets.getSelectedIndex()]
                    + ".json", UserAttendance.class);
            data = new Object[list.size()][3];
            for (int i = 0; i < list.size(); i++) {
                data[i][0] = list.get(i).getName();
                data[i][1] = list.get(i).getPresent();
                data[i][2] = list.get(i).getEmail();
            }
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    data,
                    new String[]{
                        "Name", "Present", "Email"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int row, int col) {
                    switch (col) {
                        case 0:
                        case 1:
                            return false;
                        default:
                            return true;
                    }
                }
            });

            attendanceViewer.setViewportView(jTable1);
        } catch (Exception e) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new ErrorPanel("Cannot find file").setVisible(true);
                }
            });
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void menuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuButtonActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuScreen().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_menuButtonActionPerformed

    private void eMailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eMailButtonActionPerformed
        try {
            //Find all that are absent and compile into a email list
            String[] absent = Arrays.stream(data)
                    .filter(i -> i[1].equals(false))
                    .map(o -> o[2])
                    .toArray(String[]::new);

            LoginScreen.email.sendEmail(absent, LoginScreen.currentUser.getEmail(),
                    "You missed a Student Council Meeting",
                    "Hello, \n You are receiving this email because you missed a student council meeting.\n"
                    + "Make sure you show up to the next one!"
            );
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new ErrorPanel("Successfully sent email.", true).setVisible(true);
                }
            });
        } catch (Exception e) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new ErrorPanel("Failed to send email.").setVisible(true);
                }
            });
        }
    }//GEN-LAST:event_eMailButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttendanceScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttendanceScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttendanceScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttendanceScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttendanceScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> Sheets;
    private javax.swing.JScrollPane attendanceList;
    private javax.swing.JScrollPane attendanceViewer;
    private javax.swing.JLabel attenedanceText;
    private javax.swing.JButton eMailButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton menuButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
