/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import getout.GETOUT;
import java.util.ArrayList;
import Backend.User;
import java.io.IOException;
import java.util.stream.Collectors;

import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Emperor Master Chen
 */
public class MenuScreen extends javax.swing.JFrame {


    /**
     * Creates new form MenuScreen
     */
    public MenuScreen() {
        initComponents();
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        if (LoginScreen.currentUser.getPermission() < 2) {
            jLabel1.setVisible(true);
            jLabel2.setVisible(true);
            jLabel3.setVisible(true);
            jLabel4.setVisible(true);
            ButtonforAdminCombo.setEnabled(false);
            ButtonforAttendanceCombo.setEnabled(false);
        }

    }
    private boolean isEmailOpen, isAttendanceOpen, isAdminOpen, isUserOpen = true;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();
        EmailComboBox = new javax.swing.JComboBox<>();
        ButtonforEmailCombo = new javax.swing.JButton();
        AttendanceComboBox = new javax.swing.JComboBox<>();
        ButtonforAttendanceCombo = new javax.swing.JButton();
        AdminComboBox = new javax.swing.JComboBox<>();
        ButtonforAdminCombo = new javax.swing.JButton();
        UserComboBox = new javax.swing.JComboBox<>();
        ButtonforUserCombo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(380, 460));
        setResizable(false);
        setSize(new java.awt.Dimension(380, 430));
        getContentPane().setLayout(null);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("You are not authorized to use this function!");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(70, 320, 250, 14);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Disabled.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(41, 296, 300, 70);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("You are not authorized to use this function!");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(70, 230, 250, 14);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Disabled.png"))); // NOI18N
        jLabel1.setText("bbv");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 200, 300, 70);

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/MenuScreen.jpg"))); // NOI18N
        Background.setText("jLabel1");
        Background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Background.setFocusable(false);
        Background.setOpaque(true);
        getContentPane().add(Background);
        Background.setBounds(0, 0, 380, 430);

        EmailComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Volunteers", "Members", "Executives", "Teachers" }));
        EmailComboBox.setBorder(null);
        EmailComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        EmailComboBox.setFocusable(false);
        EmailComboBox.setLightWeightPopupEnabled(false);
        EmailComboBox.setMinimumSize(new java.awt.Dimension(77, 25));
        EmailComboBox.setOpaque(false);
        EmailComboBox.setPreferredSize(new java.awt.Dimension(293, 0));
        EmailComboBox.setRequestFocusEnabled(false);
        EmailComboBox.setVerifyInputWhenFocusTarget(false);
        EmailComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(EmailComboBox);
        EmailComboBox.setBounds(45, 173, 293, 0);

        ButtonforEmailCombo.setBorderPainted(false);
        ButtonforEmailCombo.setContentAreaFilled(false);
        ButtonforEmailCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonforEmailComboMouseEntered(evt);
            }
        });
        ButtonforEmailCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonforEmailComboActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonforEmailCombo);
        ButtonforEmailCombo.setBounds(45, 110, 290, 62);

        AttendanceComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Create new attendance", "View attendance" }));
        AttendanceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttendanceComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(AttendanceComboBox);
        AttendanceComboBox.setBounds(46, 267, 290, 0);

        ButtonforAttendanceCombo.setText("jButton1");
        ButtonforAttendanceCombo.setBorderPainted(false);
        ButtonforAttendanceCombo.setContentAreaFilled(false);
        ButtonforAttendanceCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonforAttendanceComboMouseEntered(evt);
            }
        });
        ButtonforAttendanceCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonforAttendanceComboActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonforAttendanceCombo);
        ButtonforAttendanceCombo.setBounds(46, 204, 290, 63);

        AdminComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Create new user", "Delete user" }));
        AdminComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(AdminComboBox);
        AdminComboBox.setBounds(46, 361, 289, 0);

        ButtonforAdminCombo.setText("jButton1");
        ButtonforAdminCombo.setBorderPainted(false);
        ButtonforAdminCombo.setContentAreaFilled(false);
        ButtonforAdminCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonforAdminComboMouseEntered(evt);
            }
        });
        ButtonforAdminCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonforAdminComboActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonforAdminCombo);
        ButtonforAdminCombo.setBounds(45, 298, 290, 62);

        UserComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Log out and remember me", "Log out and don't remember me" }));
        UserComboBox.setMinimumSize(new java.awt.Dimension(0, 0));
        UserComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(UserComboBox);
        UserComboBox.setBounds(148, 91, 190, 0);

        ButtonforUserCombo.setText("jButton1");
        ButtonforUserCombo.setBorderPainted(false);
        ButtonforUserCombo.setContentAreaFilled(false);
        ButtonforUserCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonforUserComboMouseEntered(evt);
            }
        });
        ButtonforUserCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonforUserComboActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonforUserCombo);
        ButtonforUserCombo.setBounds(270, 27, 67, 63);

        pack();
    }// </editor-fold>//GEN-END:initComponents
private ArrayList<User> filterUsers(int permissionLevel) {
        return (ArrayList<User>) GETOUT.users.stream()
                .filter(user -> user.getPermission() == permissionLevel)
                .collect(Collectors.toList());

    }

    private void EmailComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailComboBoxActionPerformed

        switch (EmailComboBox.getSelectedItem().toString()) {
            case ("All"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new EmailScreen(GETOUT.users).setVisible(true);
                    }
                });
                this.dispose();
                break;
            case ("Volunteers"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new EmailScreen(filterUsers(0)).setVisible(true);
                    }
                });

                this.dispose();
                break;
            case ("Members"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new EmailScreen(filterUsers(1)).setVisible(true);
                    }
                });
                this.dispose();
                break;
            case ("Executives"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new EmailScreen(filterUsers(2)).setVisible(true);
                    }
                });
                this.dispose();
                break;
            case ("Teachers"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new EmailScreen(filterUsers(3)).setVisible(true);
                    }
                });
                this.dispose();
                break;

        }
    }//GEN-LAST:event_EmailComboBoxActionPerformed

    private void AttendanceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttendanceComboBoxActionPerformed
        switch (AttendanceComboBox.getSelectedItem().toString()) {
            case ("Create new attendance"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new AttendanceNew().setVisible(true);
                    }
                });
                this.dispose();
                break;
            case ("View attendance"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new AttendanceScreen().setVisible(true);
                    }
                });
                this.dispose();
                break;
        }
    }//GEN-LAST:event_AttendanceComboBoxActionPerformed

    private void AdminComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminComboBoxActionPerformed
        switch (AdminComboBox.getSelectedItem().toString()) {
            case ("Create new user"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new NewUser().setVisible(true);
                    }
                });

                dispose();
                break;
            case ("Delete user"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new DeleteUser().setVisible(true);
                    }
                });
                this.dispose();
                break;
        }
    }//GEN-LAST:event_AdminComboBoxActionPerformed

    private void UserComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserComboBoxActionPerformed
        switch (UserComboBox.getSelectedItem().toString()) {
            case ("Log out and remember me"):

                dispose();
                new LoginScreen().setVisible(true);
                break;

            case ("Log out and don't remember me"): {

                if (LoginScreen.currentUser.getEmail().equals(GETOUT.ADMIN_EMAIL)) {

                    new ErrorPanel("You can't delete the admin account!").setVisible(true);
                    break;

                } else {

                    try {
                        Files.deleteIfExists(Paths.get("UserCred/tokens/" + LoginScreen.currentUser.getEmail().substring(0, LoginScreen.currentUser.getEmail().indexOf('@'))));

                    } catch (IOException ex) {
                        new ErrorPanel("The token file has been deleted. Restart the program and log in again.").setVisible(true);
                        Logger.getLogger(MenuScreen.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    new LoginScreen().setVisible(true);
                    dispose();
                    break;

                }
            }
        }


    }//GEN-LAST:event_UserComboBoxActionPerformed

    private void ButtonforEmailComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonforEmailComboActionPerformed

        if (!isEmailOpen) {
            EmailComboBox.showPopup();
            isEmailOpen = true;

        } else {
            isEmailOpen = false;
        }


    }//GEN-LAST:event_ButtonforEmailComboActionPerformed

    private void ButtonforAttendanceComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonforAttendanceComboActionPerformed

        if (!isAttendanceOpen) {
            AttendanceComboBox.showPopup();
            isAttendanceOpen = true;

        } else {
            isAttendanceOpen = false;
        }
    }//GEN-LAST:event_ButtonforAttendanceComboActionPerformed

    private void ButtonforAdminComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonforAdminComboActionPerformed

        if (!isAdminOpen) {
            AdminComboBox.showPopup();
            isAdminOpen = true;

        } else {
            isAdminOpen = false;
        }
    }//GEN-LAST:event_ButtonforAdminComboActionPerformed

    private void ButtonforUserComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonforUserComboActionPerformed

        if (!isUserOpen) {
            UserComboBox.showPopup();
            isUserOpen = true;

        } else {
            isUserOpen = false;
        }
    }//GEN-LAST:event_ButtonforUserComboActionPerformed

    private void ButtonforEmailComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonforEmailComboMouseEntered
        isEmailOpen = EmailComboBox.isPopupVisible();
    }//GEN-LAST:event_ButtonforEmailComboMouseEntered

    private void ButtonforAttendanceComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonforAttendanceComboMouseEntered
        isAttendanceOpen = AttendanceComboBox.isPopupVisible();
    }//GEN-LAST:event_ButtonforAttendanceComboMouseEntered

    private void ButtonforAdminComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonforAdminComboMouseEntered
        isAdminOpen = AdminComboBox.isPopupVisible();
    }//GEN-LAST:event_ButtonforAdminComboMouseEntered

    private void ButtonforUserComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonforUserComboMouseEntered
        isUserOpen = UserComboBox.isPopupVisible();
    }//GEN-LAST:event_ButtonforUserComboMouseEntered

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AdminComboBox;
    private javax.swing.JComboBox<String> AttendanceComboBox;
    private javax.swing.JLabel Background;
    private javax.swing.JButton ButtonforAdminCombo;
    private javax.swing.JButton ButtonforAttendanceCombo;
    private javax.swing.JButton ButtonforEmailCombo;
    private javax.swing.JButton ButtonforUserCombo;
    private javax.swing.JComboBox<String> EmailComboBox;
    private javax.swing.JComboBox<String> UserComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
