/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import getout.GETOUT;
import java.util.ArrayList;
import Backend.User;
import java.io.IOException;
import java.util.stream.Collectors;

import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Emperor Master Chen
 */
public class MenuScreen extends javax.swing.JFrame {

    /**
     * Creates new form MenuScreen2
     */
    public MenuScreen() {
        initComponents();

    }
    boolean hasClickedEmail, hasClickedAttendance, hasClickedAdmin, hasClickedUser = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JLabel();
        EmailComboBox = new javax.swing.JComboBox<>();
        ButtonforEmailCombo = new javax.swing.JButton();
        AttendanceComboBox = new javax.swing.JComboBox<>();
        ButtonforAttendanceCombo = new javax.swing.JButton();
        AdminComboBox = new javax.swing.JComboBox<>();
        ButtonforAdminCombo = new javax.swing.JButton();
        UserComboBox = new javax.swing.JComboBox<>();
        ButtonforUserCombo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(380, 460));
        setResizable(false);
        setSize(new java.awt.Dimension(380, 430));
        getContentPane().setLayout(null);

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/MenuScreen.jpg"))); // NOI18N
        Background.setText("jLabel1");
        Background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Background.setFocusable(false);
        Background.setOpaque(true);
        getContentPane().add(Background);
        Background.setBounds(0, 0, 380, 430);

        EmailComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Volunteers", "Members", "Executives", "Teachers" }));
        EmailComboBox.setBorder(null);
        EmailComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        EmailComboBox.setFocusable(false);
        EmailComboBox.setLightWeightPopupEnabled(false);
        EmailComboBox.setMinimumSize(new java.awt.Dimension(77, 25));
        EmailComboBox.setOpaque(false);
        EmailComboBox.setPreferredSize(new java.awt.Dimension(293, 0));
        EmailComboBox.setRequestFocusEnabled(false);
        EmailComboBox.setVerifyInputWhenFocusTarget(false);
        EmailComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EmailComboBoxMouseEntered(evt);
            }
        });
        EmailComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(EmailComboBox);
        EmailComboBox.setBounds(45, 173, 293, 0);

        ButtonforEmailCombo.setBorderPainted(false);
        ButtonforEmailCombo.setContentAreaFilled(false);
        ButtonforEmailCombo.setOpaque(false);
        ButtonforEmailCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonforEmailComboActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonforEmailCombo);
        ButtonforEmailCombo.setBounds(45, 110, 290, 62);

        AttendanceComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Create new attendance", "View attendance" }));
        AttendanceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttendanceComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(AttendanceComboBox);
        AttendanceComboBox.setBounds(46, 267, 290, 0);

        ButtonforAttendanceCombo.setText("jButton1");
        ButtonforAttendanceCombo.setBorderPainted(false);
        ButtonforAttendanceCombo.setContentAreaFilled(false);
        ButtonforAttendanceCombo.setOpaque(false);
        ButtonforAttendanceCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonforAttendanceComboActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonforAttendanceCombo);
        ButtonforAttendanceCombo.setBounds(46, 204, 290, 63);

        AdminComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Create new user", "Delete user" }));
        AdminComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(AdminComboBox);
        AdminComboBox.setBounds(46, 361, 289, 0);

        ButtonforAdminCombo.setText("jButton1");
        ButtonforAdminCombo.setBorderPainted(false);
        ButtonforAdminCombo.setContentAreaFilled(false);
        ButtonforAdminCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonforAdminComboActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonforAdminCombo);
        ButtonforAdminCombo.setBounds(45, 298, 290, 62);

        UserComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Log out and remember me", "Log out and don't remember me" }));
        UserComboBox.setMinimumSize(new java.awt.Dimension(0, 0));
        UserComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(UserComboBox);
        UserComboBox.setBounds(148, 91, 190, 0);

        ButtonforUserCombo.setText("jButton1");
        ButtonforUserCombo.setBorderPainted(false);
        ButtonforUserCombo.setContentAreaFilled(false);
        ButtonforUserCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonforUserComboActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonforUserCombo);
        ButtonforUserCombo.setBounds(270, 27, 67, 63);

        pack();
    }// </editor-fold>//GEN-END:initComponents
private ArrayList<User> filterUsers(int permissionLevel) {
        return (ArrayList<User>) GETOUT.users.stream()
                .filter(user -> user.getPermission() == permissionLevel)
                .collect(Collectors.toList());

    }

    private void EmailComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailComboBoxActionPerformed

        switch (EmailComboBox.getSelectedItem().toString()) {
            case ("All"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new EmailScreen(GETOUT.users).setVisible(true);
                    }
                });
                this.dispose();
                break;
            case ("Volunteers"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new EmailScreen(filterUsers(0)).setVisible(true);
                    }
                });

                this.dispose();
                break;
            case ("Members"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new EmailScreen(filterUsers(1)).setVisible(true);
                    }
                });
                this.dispose();
                break;
            case ("Executives"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new EmailScreen(filterUsers(2)).setVisible(true);
                    }
                });
                this.dispose();
                break;
            case ("Teachers"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new EmailScreen(filterUsers(3)).setVisible(true);
                    }
                });
                this.dispose();
                break;

        }
    }//GEN-LAST:event_EmailComboBoxActionPerformed

    private void AttendanceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttendanceComboBoxActionPerformed
        switch (AttendanceComboBox.getSelectedItem().toString()) {
            case ("Create new attendance"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new AttendanceNew().setVisible(true);
                    }
                });
                this.dispose();
                break;
            case ("View attendance"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new AttendanceScreen().setVisible(true);
                    }
                });
                this.dispose();
                break;
        }
    }//GEN-LAST:event_AttendanceComboBoxActionPerformed

    private void AdminComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminComboBoxActionPerformed
        switch (AdminComboBox.getSelectedItem().toString()) {
            case ("Create new user"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new NewUser().setVisible(true);
                    }
                });

                dispose();
                break;
            case ("Delete user"):
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new DeleteUser().setVisible(true);
                    }
                });
                this.dispose();
                break;
        }
    }//GEN-LAST:event_AdminComboBoxActionPerformed

    private void UserComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserComboBoxActionPerformed
        switch (UserComboBox.getSelectedItem().toString()) {
            case ("Log out and remember me"):
                
                this.dispose();
                break;
            case ("Log out and don't remember me"): {
                try {
                    Files.deleteIfExists(Paths.get("UserCred/tokens/" + LoginScreen.currentUser.getEmail().substring(0, LoginScreen.currentUser.getEmail().indexOf('@'))));
                } catch (IOException ex) {
                    Logger.getLogger(MenuScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.dispose();
                break;
                
            }
        }
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new LoginScreen().setVisible(true);
                }
            });
            this.dispose();
        
    }//GEN-LAST:event_UserComboBoxActionPerformed

    private void EmailComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmailComboBoxMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailComboBoxMouseEntered

    private void ButtonforEmailComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonforEmailComboActionPerformed
        if (hasClickedEmail) {
            EmailComboBox.hidePopup();
            hasClickedEmail = false;
        } else {
            EmailComboBox.showPopup();
            hasClickedEmail = true;
        }
    }//GEN-LAST:event_ButtonforEmailComboActionPerformed

    private void ButtonforAttendanceComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonforAttendanceComboActionPerformed
        if (hasClickedAttendance) {
            AttendanceComboBox.hidePopup();
            hasClickedAttendance = false;
        } else {
            AttendanceComboBox.showPopup();
            hasClickedAttendance = true;
        }
    }//GEN-LAST:event_ButtonforAttendanceComboActionPerformed

    private void ButtonforAdminComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonforAdminComboActionPerformed
        if (hasClickedAdmin) {
            AdminComboBox.hidePopup();
            hasClickedAdmin = false;
        } else {
            AdminComboBox.showPopup();
            hasClickedAdmin = true;
        }
    }//GEN-LAST:event_ButtonforAdminComboActionPerformed

    private void ButtonforUserComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonforUserComboActionPerformed

        if (hasClickedUser) {
            UserComboBox.hidePopup();
            hasClickedUser = false;
        } else {
            UserComboBox.showPopup();
            hasClickedUser = true;
        }
    }//GEN-LAST:event_ButtonforUserComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AdminComboBox;
    private javax.swing.JComboBox<String> AttendanceComboBox;
    private javax.swing.JLabel Background;
    private javax.swing.JButton ButtonforAdminCombo;
    private javax.swing.JButton ButtonforAttendanceCombo;
    private javax.swing.JButton ButtonforEmailCombo;
    private javax.swing.JButton ButtonforUserCombo;
    private javax.swing.JComboBox<String> EmailComboBox;
    private javax.swing.JComboBox<String> UserComboBox;
    // End of variables declaration//GEN-END:variables
}
